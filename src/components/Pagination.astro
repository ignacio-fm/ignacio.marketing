---
const { length, currentUrl, currentPage, firstUrl, prevUrl, nextUrl, lastUrl } = Astro.props;
const paginationList = Array.from({length: Number(length)}, (_, i) => i + 1);
---

<nav aria-label="PaginaciÃ³n" class="flex justify-center items-center max-sm:scale-75">
    { firstUrl == currentUrl ? (
        <span class="text-gray-200 border flex text-center place-content-center items-center p-2 rounded-l-lg">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevrons-left" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M11 7l-5 5l5 5"></path>
                <path d="M17 7l-5 5l5 5"></path>
            </svg>
        </span>
    ) : (
        <a href={firstUrl} class="flex text-center place-content-center items-center p-2 hover:text-gray-700 hover:bg-gray-100 text-gray-500 border rounded-l-lg">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevrons-left" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M11 7l-5 5l5 5"></path>
                <path d="M17 7l-5 5l5 5"></path>
            </svg>
        </a>
    )}

    { prevUrl ? (
        <a href={prevUrl} class="flex text-center place-content-center items-center p-2 hover:text-gray-700 hover:bg-gray-100 text-gray-500 border border-l-0">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-left" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M15 6l-6 6l6 6"></path>
            </svg>
        </a>
    ) : (
        <span class="text-gray-200 border border-l-0 flex text-center place-content-center  items-center p-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-left" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M15 6l-6 6l6 6"></path>
            </svg>
        </span>        
    )}
    
    {
            paginationList.map((num) => {
                if (length < 5 || length == 4) {
                    return (
                        <a href={`${firstUrl}${num == 1 ? "" : '/'+(num)}`} class={`flex text-center place-content-center items-center p-2 h-[2em] w-[2em] ${currentPage == num ? "font-medium text-gray-500 border-y-[1px] min-h-[42px] min-w-[42px] bg-gray-200" : "font-medium hover:text-gray-700 hover:bg-gray-100 text-gray-500 border-y-[1px] min-h-[42px] min-w-[42px]"}`}>
                            {num}
                        </a>
                    );
                }
                else {
                    if (num < 3 || num == 2 || num > length - 2 || num == currentPage || num == currentPage - 1 || num == currentPage + 1) {
                        return (
                            <a href={`${firstUrl}${num == 1 ? "" : '/'+(num)}`} class={`flex text-center place-content-center items-center p-2 h-[40px] w-[40px] ${currentPage == num ? "font-medium text-white border-y-[1px] min-h-[42px] min-w-[42px]" : "hover:text-gray-700 hover:bg-gray-100 text-gray-500 border-y-[1px] min-h-[42px] min-w-[42px]"}`}>
                                {num}
                            </a>
                        );
                    }
                    else if (num == 3 || num == length - 3) {
                        return (
                            <span class="flex text-center place-content-center items-center p-2 h-[40px] w-[40px] text-gray-500 border min-h-[42px] min-w-[42px]">
                                ...
                            </span>
                        );
                    }
                }
            })
        }

    { !nextUrl ? (
        <span class="text-gray-200 border border-r-0 flex text-center place-content-center items-center p-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-right" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M9 6l6 6l-6 6"></path>
            </svg>
        </span>
    ) : (
        <a href={nextUrl} class="flex text-center place-content-center items-center p-2 hover:text-gray-700 hover:bg-gray-100 text-gray-500 border border-r-0">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-right" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M9 6l6 6l-6 6"></path>
            </svg>
        </a>
    )}

    { lastUrl == currentUrl ? (
        <span class="text-gray-200 border flex text-center place-content-center items-center p-2 rounded-r-lg">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevrons-right" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M7 7l5 5l-5 5"></path>
                <path d="M13 7l5 5l-5 5"></path>
            </svg>
        </span>
    ) : (
        <a href={lastUrl} class="flex text-center place-content-center items-center p-2 hover:text-gray-700 hover:bg-gray-100 text-gray-500 border rounded-r-lg">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevrons-right" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M7 7l5 5l-5 5"></path>
                <path d="M13 7l5 5l-5 5"></path>
            </svg>
        </a>
    )}
    
</nav>